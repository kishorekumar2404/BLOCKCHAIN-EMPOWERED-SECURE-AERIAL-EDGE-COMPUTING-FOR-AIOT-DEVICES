package OPTIMAL;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author abdulkalam
 */
public class Second extends javax.swing.JFrame {

    /**
     * Creates new form boomerang
     */
    
    Statement stmt;
    String ckey="";
    String mtime="",nearestnode="";
    String key="";
    public Second() {
        initComponents();
    
        
        
        
       
         try {
            
         String url="jdbc:mysql://localhost:3306/boomerang";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection(url,"root","root");
         stmt=con.createStatement();
//stmt = con.createStatement();
         
      
            
      
      
      
        }
        catch(Exception ex){}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        from = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        to = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        message = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        filename = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setTitle("OPTIMAL");
        setBackground(new java.awt.Color(51, 0, 51));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setText("INTEGRATING BLOCK CHAIN");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Sending Message");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("FROM");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("TO");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Message");

        jButton1.setBackground(new java.awt.Color(153, 0, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Send Message");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 0, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Choose File");

        jButton3.setBackground(new java.awt.Color(153, 0, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Browse");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 0, 153));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("TRANSFER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("File Upload");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(37, 37, 37)
                                .addComponent(filename, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(from))
                                    .addComponent(jLabel3))
                                .addGap(46, 46, 46)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel3)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel7)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filename, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     public static String getDATE()
		{

		java.util.Date date12 = new java.util.Date();
		String strDateFormat = "yyyy:MM:dd  HH:mm:ss ";
		SimpleDateFormat sdf = new SimpleDateFormat(strDateFormat);
		String date1 = sdf.format(date12.getTime());
		return date1;
		}
     
     
     public void QLearning(String fromaddr,String toaddr,String msg) throws SQLException
     {
         String q1="select pseudonym from routing";
            ResultSet rs12=stmt.executeQuery(q1);
            while (rs12.next())
            {
                nearestnode=rs12.getString("pseudonym");
            }
            System.out.println("Nearest node :: "+nearestnode);
                 JOptionPane.showMessageDialog(null,"Nearest Node "+ nearestnode ,"Message Report",JOptionPane.PLAIN_MESSAGE); 	
                 
                 key=JOptionPane.showInputDialog(null,"Enter Key");
                   ResultSet tr=stmt.executeQuery("select enckey from message");
                while(tr.next())
                {
                        ckey=tr.getString("enckey");
                }
                if (ckey.equals(key))
                {
               stmt.executeUpdate("update message set status='Send' where sender='"+ fromaddr +"' and receiver='"+ toaddr+"' and enckey='"+ key +"'");
                    try
        {            
  	InputStream inStream = null;
	OutputStream outStream = null; 
    	    File afile =new File(filename.getText());
            int len=filename.getText().length();
            int aa=filename.getText().lastIndexOf("\\");
			String filename1 = filename.getText().substring(0,aa+1);
                        
				System.out.println(filename1);
                                String fn123=filename.getText().substring(aa+1, len);
				String filename2 = filename1+fn123;
				System.out.println(filename2);
                                System.out.println(fn123);
    	    
            File folder =new File("D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\\\"+toaddr);
            if(!folder.exists())
                   folder.mkdirs();  
                                
                              
                                
            File bfile =new File("ED:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\\\"+toaddr+"\\"+fn123);
 
    	    inStream = new FileInputStream(afile);
    	    outStream = new FileOutputStream(bfile);
 
    	    byte[] buffer = new byte[1024];
 
    	    int length;
    	    //copy the file content in bytes 
    	    while ((length = inStream.read(buffer)) > 0){
 
    	    	outStream.write(buffer, 0, length);
 
    	    }
 
    	    inStream.close();
    	    outStream.close();
 String aa123="D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\"+toaddr+"\\"+fn123;
    	    //delete the original file
//    	    afile.delete();
 
    	    System.out.println("File Downloaded!");
 
    	 JOptionPane.showMessageDialog(null,"Downloaded in "+aa123,"",JOptionPane.DEFAULT_OPTION);
        
        }
        catch(Exception ex)
        {
            System.out.println(ex);
        }
               JOptionPane.showMessageDialog(null,"Message Send Successfully","Message Report",JOptionPane.PLAIN_MESSAGE); 	
                }
                else{
                 
                //String qry12="update message set status='Send' where sender='"+fromaddr+"' and receiver='"+toaddr+"' and msg='"+msg+"'";
                //stmt.executeUpdate(qry12);
                  JOptionPane.showMessageDialog(null,"Message Lost","Message Report",JOptionPane.PLAIN_MESSAGE); 		
                }
     }
     
     


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
          Vector columnNames = new Vector();
        Vector data = new Vector();
        JPanel p=new JPanel();
            try {
        String fromaddr=from.getText();
        String toaddr=to.getText();
        String msg=message.getText();
        int len=filename.getText().length();
            int aa=filename.getText().lastIndexOf("\\");
			//String filename1 = filename.getText().substring(0,aa+1);
            
        String fn=filename.getText().substring(aa+1, len);
	
        mtime=getDATE();
        JOptionPane.showMessageDialog(null,fromaddr+ " "+ toaddr+" "+ fn+" "+mtime,"Message Report",JOptionPane.PLAIN_MESSAGE); 	
        String qry="select pseudonym from routing where  pseudonym='"+toaddr+"'";
                 
            ResultSet rs=stmt.executeQuery(qry);
            
            
            int count =0;
            while(rs.next())
            {
                count++;
            }
            int i123=count;
          key=JOptionPane.showInputDialog(null,"Enter Key");
            
            if (i123==0)
            {
            
                JOptionPane.showMessageDialog(null," Out of Network","Message Report",JOptionPane.PLAIN_MESSAGE); 	
                String qry1="insert into message values('"+fromaddr+"','"+toaddr+"','"+msg+"','Pending','"+ key +"')";
                stmt.executeUpdate(qry1);
                QLearning(fromaddr,toaddr,msg);
                
                
            }
            else
            {
                
                String qry2="insert into message values('"+fromaddr+"','"+toaddr+"','"+msg+"','Pending','"+ key +"')";
                stmt.executeUpdate(qry2);
                ResultSet tr=stmt.executeQuery("select enckey from message");
                while(tr.next())
                {
                        ckey=tr.getString("enckey");
                }
                if (ckey.equals(key))
                {
                    
                     
                stmt.executeUpdate("update message set status='Send' where sender='"+ fromaddr +"' and receiver='"+ toaddr+"' and enckey='"+ key +"'");
                   try
        {            
  	InputStream inStream = null;
	OutputStream outStream = null; 
    	    File afile =new File(filename.getText());
            len=filename.getText().length();
             aa=filename.getText().lastIndexOf("\\");
			String filename1 = filename.getText().substring(0,aa+1);
                        
				System.out.println(filename1);
                                String fn123=filename.getText().substring(aa+1, len);
				String filename2 = filename1+fn123;
				System.out.println(filename2);
                                System.out.println(fn123);
    	    File folder =new File("D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\"+toaddr);
            if(!folder.exists())
                   folder.mkdirs();  
    	    
            
            
            File bfile =new File("D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\"+toaddr+"\\"+fn123);
            //if(!bfile.exists())
              //     bfile.mkdirs();  
    	              
    	    inStream = new FileInputStream(afile);
    	    outStream = new FileOutputStream(bfile);
 
    	    byte[] buffer = new byte[1024];
 
    	    int length;
    	    //copy the file content in bytes 
    	    while ((length = inStream.read(buffer)) > 0){
 
    	    	outStream.write(buffer, 0, length);
 
    	    }
 
    	    inStream.close();
    	    outStream.close();
 String aa123="D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\"+toaddr+"\\"+fn123;
    	    //delete the original file
//    	    afile.delete();
 
    	    System.out.println("File Downloaded!");
 
    	 JOptionPane.showMessageDialog(null,"Downloaded in "+aa123,"",JOptionPane.DEFAULT_OPTION);
        
        }
        catch(Exception ex)
        {
            System.out.println(ex);
        }
                    
              
               JOptionPane.showMessageDialog(null,"Message Send Successfully","Message Report",JOptionPane.PLAIN_MESSAGE); 	
                }
                else{
                 
                //String qry12="update message set status='Send' where sender='"+fromaddr+"' and receiver='"+toaddr+"' and msg='"+msg+"'";
                //stmt.executeUpdate(qry12);
                  JOptionPane.showMessageDialog(null,"Message Lost","Message Report",JOptionPane.PLAIN_MESSAGE); 		
                }
                
            }
            
            
            
            
            
            
            
            
            /*
              ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();
            for (int i = 1; i <= columns; i++) {
                columnNames.addElement( md.getColumnName(i) );
            }
            while (rs.next()) {
                Vector row = new Vector(columns);
                for (int i = 1; i <= columns; i++){
                    row.addElement( rs.getObject(i) );
                }
                data.addElement( row );
            }
            //rs.close();
            //stmt.close();
      
        JTable table = new JTable(data, columnNames);
        TableColumn col;
        for (int i = 0; i < table.getColumnCount(); i++) {
            col = table.getColumnModel().getColumn(i);
            col.setMaxWidth(250);
        }
        JScrollPane scrollPane = new JScrollPane( table );
        p.add( scrollPane );
        JFrame f=new JFrame();
        f.add(p);
        f.setSize(600,400);
        f.setVisible(true); 
         
       */     
        } catch (SQLException ex) {
            Logger.getLogger(Second.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        from.setText("");
        to.setText("");
        message.setText("");
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        
       FileSelection sel = new FileSelection();
       filename.setText(sel.fileSelectionTool());
    
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
           
        
        
        
        
        
      Vector columnNames = new Vector();
        Vector data = new Vector();
        JPanel p=new JPanel();
            try {
        String fromaddr=from.getText();
        String toaddr=to.getText();
        String msg=filename.getText();
        int len=filename.getText().length();
            int aa=filename.getText().lastIndexOf("\\");
			//String filename1 = filename.getText().substring(0,aa+1);
            
        String fn=filename.getText().substring(aa+1, len);
				//String filename2 = filename1+fn;
        mtime=getDATE();
        JOptionPane.showMessageDialog(null,fromaddr+ " "+ toaddr+" "+ msg+" "+mtime,"Message Report",JOptionPane.PLAIN_MESSAGE); 	
        String qry="select pseudonym from routing where  pseudonym='"+toaddr+"'";
                 
            ResultSet rs=stmt.executeQuery(qry);
            int count =0;
            while(rs.next())
            {
                count++;
            }
            int i123=count;
          key=JOptionPane.showInputDialog(null,"Enter Key");
            
            if (i123==0)
            {
            
                JOptionPane.showMessageDialog(null,"Out of Network","Message Report",JOptionPane.PLAIN_MESSAGE); 	
                String qry1="insert into message values('"+fromaddr+"','"+toaddr+"','"+fn+"','Pending','"+ key +"')";
                stmt.executeUpdate(qry1);
                QLearning(fromaddr,toaddr,msg);
                
                
            }
            else
            {
                
                String qry2="insert into message values('"+fromaddr+"','"+toaddr+"','"+fn+"','Pending','"+ key +"')";
                stmt.executeUpdate(qry2);
                ResultSet tr=stmt.executeQuery("select enckey from message");
                while(tr.next())
                {
                        ckey=tr.getString("enckey");
                }
                if (ckey.equals(key))
                {
               stmt.executeUpdate("update message set status='Send' where sender='"+ fromaddr +"' and receiver='"+ toaddr+"' and enckey='"+ key +"'");
             
               
               try
        {            
  	InputStream inStream = null;
	OutputStream outStream = null; 
    	    File afile =new File(filename.getText());
             len=filename.getText().length();
            aa=filename.getText().lastIndexOf("\\");
			String filename1 = filename.getText().substring(0,aa+1);
                        
				System.out.println(filename1);
                                String fn123=filename.getText().substring(aa+1, len);
				String filename2 = filename1+fn123;
				System.out.println(filename2);
                                System.out.println(fn123);
                                
 //java.io.File folder = new File("C:/Documents and Settings/Greensoft/My Documents/CloudMe/"+ session.getAttribute("csp").toString() +"/"+uname);
//if(!folder.exists())
//{
//folder.mkdirs(); 

                                
                                
    	    File bfile =new File("D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\"+toaddr+"\\"+fn123);
            if(!bfile.exists())
                    bfile.mkdirs();  
    	    inStream = new FileInputStream(afile);
    	    outStream = new FileOutputStream(bfile);
 
    	    byte[] buffer = new byte[1024];
 
    	    int length;
    	    //copy the file content in bytes 
    	    while ((length = inStream.read(buffer)) > 0)
            {
 
    	    	outStream.write(buffer, 0, length);
 
    	    }
 
    	    inStream.close();
    	    outStream.close();
 String aa123="D:\\MAHA PROJECT 2017-2018\\OPTIMAL CONTENT\\Received Files\\"+toaddr+"\\"+fn123;
    	    //delete the original file
//    	    afile.delete();
 
    	    System.out.println("File Downloaded!");
 
    	 JOptionPane.showMessageDialog(null,"Downloaded in "+aa123,"",JOptionPane.DEFAULT_OPTION);
        
        }
        catch(Exception ex)
        {
            System.out.println(ex);
        }
                 JOptionPane.showMessageDialog(null,"File Downloaded Successfully","Message Report",JOptionPane.PLAIN_MESSAGE); 
                }
                else
                {
                 
                  JOptionPane.showMessageDialog(null,"File Lost","Message Report",JOptionPane.PLAIN_MESSAGE); 		
                }
                
            }
          
        } catch (SQLException ex) {
            Logger.getLogger(Second.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Second().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filename;
    private javax.swing.JTextField from;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField message;
    private javax.swing.JTextField to;
    // End of variables declaration//GEN-END:variables
}
